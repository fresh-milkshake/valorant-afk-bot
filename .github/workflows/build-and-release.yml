name: Build and Release

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ['3.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build with PyInstaller
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          pyinstaller --onefile --name "Valorant-AntiAFK-Windows" src/main.py
        else
          pyinstaller --onefile --name "Valorant-AntiAFK-Linux" src/main.py
        fi
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: Valorant-AntiAFK-${{ matrix.os }}
        path: dist/

  release:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/Valorant-AntiAFK-Windows/*
          artifacts/Valorant-AntiAFK-Linux/*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 